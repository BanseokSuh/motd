#env:
#  AWS_REGION: ap-northeast-2
#  AWS_S3_BUCKET: motd-bucket-v1
#  AWS_CODE_DEPLOY_APPLICATION: motd-cicd-CD
#  AWS_CODE_DEPLOY_GROUP: motd-cicd-CD-group

name: MOTD CI/CD
run-name: ${{ github.actor }} is deploying MOTD
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-docker-image:
    runs-on: ubuntu-latest

    steps:
      - name: main 브랜치로 이동
        uses: actions/checkout@v4
        with:
          ref: main

      # Java 21 세팅
      - name: JDK 21 설치
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'corretto'

      # gradle caching (빌드 시간 줄이기)
      - name: Gradle Caching
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      # 환경별 yml 파일 생성
      - name: make application-prod.yml
        if: contains(github.ref, 'main')
        run: |
          cd ./src/main/resources
          touch ./application.yml
          touch ./application-test.yml
          touch ./application-prod.yml
          echo "${{ secrets.APPLICATION_YML }}" | base64 --decode > src/main/resources/application.yml
          echo "${{ secrets.APPLICATION_TEST_YML }}" | base64 --decode > src/main/resources/application-test.yml
          echo "${{ secrets.APPLICATION_PROD_YML }}" | base64 --decode > src/main/resources/application-prod.yml
        shell: bash

      # gradle chmod
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      # Spring Boot 프로젝트 build
      - name: Build with Gradle
        run: ./gradlew clean build -x test

      # Docker 이미지 빌드 & Push
      - name: Docker Image Build & Push
        run: |
          docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_PASSWORD }}
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/motd .
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/motd


